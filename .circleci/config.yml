version: 2

workflows:
  version: 2
  workflow:
    jobs:
      - test-3.6:
          context:
            - docker-hub-creds-ro
      - test-3.7:
          context:
            - docker-hub-creds-ro
      - test-3.8:
          context:
            - docker-hub-creds-ro

defaults: &defaults
  working_directory: ~/code
  environment:
    STRICT_WARNINGS: '1'
  steps:
  - checkout
  - run:
      name: Install dependencies
      command: |
        sudo pip install -r requirements.txt
        sudo pip install -r requirements_tests.txt
  - run:
      name: Lint
      command: flake8
  - run:
      name: Test
      command: PYTHONPATH=. pytest

slack-fail: &slack-fail-notification
    channel: eng-backend
    branch_pattern: master
    event: fail
    custom: |
      {
          "text": "CircleCI job failed.",
          "blocks": [
              {
                  "type": "header",
                  "text": {
                      "type": "plain_text",
                      "text": "CircleCI Failed. :red_circle:",
                      "emoji": true
                  }
              },
              {
                  "type": "section",
                  "fields": [
                      {
                          "type": "mrkdwn",
                          "text": "*Project*: $CIRCLE_PROJECT_REPONAME"
                      },
                      {
                          "type": "mrkdwn",
                          "text": "*Author*: $CIRCLE_USERNAME"
                      }
                  ]
              },
              {
                  "type": "actions",
                  "elements": [
                      {
                          "type": "button",
                          "text": {
                              "type": "plain_text",
                              "text": "View Job"
                          },
                          "url": "${CIRCLE_BUILD_URL}"
                      }
                  ]
              }
          ]
      }

jobs:
  static-code-analysis:
    <<: *defaults
    docker:
    - image: circleci/python:3.8
      auth:
        username: $DOCKER_USER
        password: $DOCKER_PASS
    working_directory: ~/code
    steps:
      - checkout
      - run:
          name: Exit early if not running tests
          command: |
            if [ "$(git log -1 --pretty=%B | head -n 1 | grep '#notests')" ]; then
              circleci-agent step halt
            fi

      - run:
          name: Prepare Environment
          command: |
            # Pip doesn't like urls and packages with modifiers as constraints,
            # so we filter them out
            pip install -r requirements_prometheus.txt -r requirements_tests.txt -r requirements.txt

      - run:
          name: lintlizard
          when: always
          command: |
            lintlizard

      - slack/notify: *slack-fail-notification

  test-3.6:
    <<: *defaults
    docker:
    - image: circleci/python:3.6
      auth:
        username: $DOCKER_USER
        password: $DOCKER_PASS
    - image: redis:3.2.12-alpine
      auth:
        username: $DOCKER_USER
        password: $DOCKER_PASS
  test-3.7:
    <<: *defaults
    docker:
    - image: circleci/python:3.7
      auth:
        username: $DOCKER_USER
        password: $DOCKER_PASS
    - image: redis:3.2.12-alpine
      auth:
        username: $DOCKER_USER
        password: $DOCKER_PASS
  test-3.8:
    <<: *defaults
    docker:
    - image: circleci/python:3.8
      auth:
        username: $DOCKER_USER
        password: $DOCKER_PASS
    - image: redis:3.2.12-alpine
      auth:
        username: $DOCKER_USER
        password: $DOCKER_PASS
